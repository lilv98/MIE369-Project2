#================================================================
# A Makefile for the fodt (first-order decision theory) package
# and subpackages.
#
# Author: Scott Sanner
# $Revision: 1.1 $
#================================================================

# environment settings:
JAVAC   = javac -classpath ../../..
JAVADOC = javadoc
JAVA    = java

# project specifics:
CLASSES      = \
	BindingSet.class FOPC.class TestKb.class VampireKb.class \
	VampireFOFKb.class OtterKb.class  CachingKb.class  SpassKb.class \
	HyperResClauseKb.class \
        Example.class DLFOLClauseKb.class  GroundKb.class \
	MultipleQueries.class
#       TestFOPC.class \
#	ADDSimplify.class \
# 	ClauseKb.class \
#       PrologKb.class \
#	TestTrans.class  \
#	SimpResult.class  \
#	HyperResDemodCKB.class  DLDemodClauseKb.class  DemodClauseKb.class 

# list of subpackages:
#PACKAGES     = parser test
PACKAGES     = test

# Explain to make how compiling Java code works...
.SUFFIXES :     .class .java
.java.class :
	$(JAVAC) $<

# some other useful macros we can derive...
SRCS = $(CLASSES:.class=.java)
DOCS = $(CLASSES:.class=.html)

# Typical make targets:
all: $(CLASSES) $(PACKAGES)

docs: ALWAYS_BUILD
	-mkdir docs; \
	$(JAVADOC) -author -d docs $(SRCS) $(PACKAGES)

clean:
	-rm *.class *~

# Packages:
parser: ALWAYS_BUILD
	cd parser; $(MAKE) all

test: ALWAYS_BUILD
	echo PARSER TEST RESULTS;
	echo; java  -classpath ../../..  logic.kb.fol.parser.parser parser/ntest0.fol;
	echo; java  -classpath ../../..  logic.kb.fol.parser.parser parser/ntest1.fol;
	echo; java  -classpath ../../..  logic.kb.fol.parser.parser parser/ntest2.fol;
	echo; java  -classpath ../../..  logic.kb.fol.parser.parser parser/ntest3.fol;
	echo; java  -classpath ../../..  logic.kb.fol.parser.parser parser/ntest4.fol;
	echo; java  -classpath ../../..  logic.kb.fol.parser.parser parser/ntest5.fol;

# This is a dummy target that can be used to ensure that a target's
# dependencies are never satisfied.  This is useful because by default, make
# treats the presence of a directory with the same name as the target as an
# up-to-date target.
ALWAYS_BUILD:
